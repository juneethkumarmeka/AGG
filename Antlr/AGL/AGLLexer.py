# Generated from .\AGL.g4 by ANTLR 4.9.3
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\65")
        buf.write("\u018e\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5")
        buf.write("\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3")
        buf.write("\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b")
        buf.write("\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3")
        buf.write("\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n")
        buf.write("\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3")
        buf.write("\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21")
        buf.write("\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\27")
        buf.write("\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3")
        buf.write("!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3")
        buf.write("&\3&\3&\3&\3&\3&\5&\u011b\n&\3\'\3\'\3\'\3\'\3\'\3\'\3")
        buf.write("\'\3(\3(\3(\3)\3)\3)\3)\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+")
        buf.write("\3+\3,\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3.\3.\6")
        buf.write(".\u0146\n.\r.\16.\u0147\3.\6.\u014b\n.\r.\16.\u014c\5")
        buf.write(".\u014f\n.\3/\3/\7/\u0153\n/\f/\16/\u0156\13/\3/\3/\3")
        buf.write("/\7/\u015b\n/\f/\16/\u015e\13/\3/\5/\u0161\n/\3\60\6\60")
        buf.write("\u0164\n\60\r\60\16\60\u0165\3\61\6\61\u0169\n\61\r\61")
        buf.write("\16\61\u016a\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3")
        buf.write("\64\3\64\7\64\u0177\n\64\f\64\16\64\u017a\13\64\3\64\5")
        buf.write("\64\u017d\n\64\3\64\3\64\3\64\3\64\3\64\7\64\u0184\n\64")
        buf.write("\f\64\16\64\u0187\13\64\3\64\3\64\5\64\u018b\n\64\3\64")
        buf.write("\3\64\3\u0185\2\65\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n")
        buf.write("\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'")
        buf.write("\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ")
        buf.write("?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g")
        buf.write("\65\3\2\t\5\2C\\aac|\6\2\62;C\\aac|\4\2))^^\4\2$$^^\3")
        buf.write("\2\62;\5\2\13\f\17\17\"\"\4\2\f\f\17\17\2\u019a\2\3\3")
        buf.write("\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2")
        buf.write("\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2")
        buf.write("\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2")
        buf.write("\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2")
        buf.write("\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3")
        buf.write("\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2")
        buf.write("\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3")
        buf.write("\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K")
        buf.write("\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2")
        buf.write("U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2")
        buf.write("\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2")
        buf.write("\2\3i\3\2\2\2\5p\3\2\2\2\7r\3\2\2\2\tt\3\2\2\2\13y\3\2")
        buf.write("\2\2\r\u0083\3\2\2\2\17\u008d\3\2\2\2\21\u009b\3\2\2\2")
        buf.write("\23\u00a9\3\2\2\2\25\u00ab\3\2\2\2\27\u00ad\3\2\2\2\31")
        buf.write("\u00af\3\2\2\2\33\u00b1\3\2\2\2\35\u00b6\3\2\2\2\37\u00ba")
        buf.write("\3\2\2\2!\u00be\3\2\2\2#\u00c1\3\2\2\2%\u00c3\3\2\2\2")
        buf.write("\'\u00c6\3\2\2\2)\u00d1\3\2\2\2+\u00d3\3\2\2\2-\u00d6")
        buf.write("\3\2\2\2/\u00d8\3\2\2\2\61\u00dc\3\2\2\2\63\u00e0\3\2")
        buf.write("\2\2\65\u00ed\3\2\2\2\67\u00f9\3\2\2\29\u00fb\3\2\2\2")
        buf.write(";\u00fd\3\2\2\2=\u00ff\3\2\2\2?\u0101\3\2\2\2A\u0103\3")
        buf.write("\2\2\2C\u0105\3\2\2\2E\u0108\3\2\2\2G\u010b\3\2\2\2I\u010e")
        buf.write("\3\2\2\2K\u011a\3\2\2\2M\u011c\3\2\2\2O\u0123\3\2\2\2")
        buf.write("Q\u0126\3\2\2\2S\u012a\3\2\2\2U\u012e\3\2\2\2W\u0135\3")
        buf.write("\2\2\2Y\u013d\3\2\2\2[\u014e\3\2\2\2]\u0160\3\2\2\2_\u0163")
        buf.write("\3\2\2\2a\u0168\3\2\2\2c\u016e\3\2\2\2e\u0170\3\2\2\2")
        buf.write("g\u018a\3\2\2\2ij\7o\2\2jk\7q\2\2kl\7f\2\2lm\7w\2\2mn")
        buf.write("\7n\2\2no\7g\2\2o\4\3\2\2\2pq\7}\2\2q\6\3\2\2\2rs\7\177")
        buf.write("\2\2s\b\3\2\2\2tu\7v\2\2uv\7{\2\2vw\7r\2\2wx\7g\2\2x\n")
        buf.write("\3\2\2\2yz\7U\2\2z{\7{\2\2{|\7o\2\2|}\7o\2\2}~\7g\2\2")
        buf.write("~\177\7v\2\2\177\u0080\7t\2\2\u0080\u0081\7k\2\2\u0081")
        buf.write("\u0082\7e\2\2\u0082\f\3\2\2\2\u0083\u0084\7u\2\2\u0084")
        buf.write("\u0085\7{\2\2\u0085\u0086\7o\2\2\u0086\u0087\7o\2\2\u0087")
        buf.write("\u0088\7g\2\2\u0088\u0089\7v\2\2\u0089\u008a\7t\2\2\u008a")
        buf.write("\u008b\7k\2\2\u008b\u008c\7e\2\2\u008c\16\3\2\2\2\u008d")
        buf.write("\u008e\7p\2\2\u008e\u008f\7q\2\2\u008f\u0090\7p\2\2\u0090")
        buf.write("\u0091\7/\2\2\u0091\u0092\7u\2\2\u0092\u0093\7{\2\2\u0093")
        buf.write("\u0094\7o\2\2\u0094\u0095\7o\2\2\u0095\u0096\7g\2\2\u0096")
        buf.write("\u0097\7v\2\2\u0097\u0098\7t\2\2\u0098\u0099\7k\2\2\u0099")
        buf.write("\u009a\7e\2\2\u009a\20\3\2\2\2\u009b\u009c\7P\2\2\u009c")
        buf.write("\u009d\7q\2\2\u009d\u009e\7p\2\2\u009e\u009f\7/\2\2\u009f")
        buf.write("\u00a0\7U\2\2\u00a0\u00a1\7{\2\2\u00a1\u00a2\7o\2\2\u00a2")
        buf.write("\u00a3\7o\2\2\u00a3\u00a4\7g\2\2\u00a4\u00a5\7v\2\2\u00a5")
        buf.write("\u00a6\7t\2\2\u00a6\u00a7\7k\2\2\u00a7\u00a8\7e\2\2\u00a8")
        buf.write("\22\3\2\2\2\u00a9\u00aa\7]\2\2\u00aa\24\3\2\2\2\u00ab")
        buf.write("\u00ac\7_\2\2\u00ac\26\3\2\2\2\u00ad\u00ae\7*\2\2\u00ae")
        buf.write("\30\3\2\2\2\u00af\u00b0\7+\2\2\u00b0\32\3\2\2\2\u00b1")
        buf.write("\u00b2\7t\2\2\u00b2\u00b3\7w\2\2\u00b3\u00b4\7n\2\2\u00b4")
        buf.write("\u00b5\7g\2\2\u00b5\34\3\2\2\2\u00b6\u00b7\7u\2\2\u00b7")
        buf.write("\u00b8\7w\2\2\u00b8\u00b9\7d\2\2\u00b9\36\3\2\2\2\u00ba")
        buf.write("\u00bb\7p\2\2\u00bb\u00bc\7c\2\2\u00bc\u00bd\7e\2\2\u00bd")
        buf.write(" \3\2\2\2\u00be\u00bf\7c\2\2\u00bf\u00c0\7e\2\2\u00c0")
        buf.write("\"\3\2\2\2\u00c1\u00c2\7?\2\2\u00c2$\3\2\2\2\u00c3\u00c4")
        buf.write("\7<\2\2\u00c4\u00c5\7?\2\2\u00c5&\3\2\2\2\u00c6\u00c7")
        buf.write("\7d\2\2\u00c7\u00c8\7k\2\2\u00c8\u00c9\7p\2\2\u00c9\u00ca")
        buf.write("\7u\2\2\u00ca\u00cb\7v\2\2\u00cb\u00cc\7t\2\2\u00cc\u00cd")
        buf.write("\7\64\2\2\u00cd\u00ce\7k\2\2\u00ce\u00cf\7p\2\2\u00cf")
        buf.write("\u00d0\7v\2\2\u00d0(\3\2\2\2\u00d1\u00d2\7\60\2\2\u00d2")
        buf.write("*\3\2\2\2\u00d3\u00d4\7/\2\2\u00d4\u00d5\7@\2\2\u00d5")
        buf.write(",\3\2\2\2\u00d6\u00d7\7=\2\2\u00d7.\3\2\2\2\u00d8\u00d9")
        buf.write("\7c\2\2\u00d9\u00da\7f\2\2\u00da\u00db\7f\2\2\u00db\60")
        buf.write("\3\2\2\2\u00dc\u00dd\7f\2\2\u00dd\u00de\7g\2\2\u00de\u00df")
        buf.write("\7n\2\2\u00df\62\3\2\2\2\u00e0\u00e1\7t\2\2\u00e1\u00e2")
        buf.write("\7w\2\2\u00e2\u00e3\7n\2\2\u00e3\u00e4\7g\2\2\u00e4\u00e5")
        buf.write("\7u\2\2\u00e5\u00e6\7g\2\2\u00e6\u00e7\7s\2\2\u00e7\u00e8")
        buf.write("\7w\2\2\u00e8\u00e9\7g\2\2\u00e9\u00ea\7p\2\2\u00ea\u00eb")
        buf.write("\7e\2\2\u00eb\u00ec\7g\2\2\u00ec\64\3\2\2\2\u00ed\u00ee")
        buf.write("\7u\2\2\u00ee\u00ef\7w\2\2\u00ef\u00f0\7d\2\2\u00f0\u00f1")
        buf.write("\7u\2\2\u00f1\u00f2\7g\2\2\u00f2\u00f3\7s\2\2\u00f3\u00f4")
        buf.write("\7w\2\2\u00f4\u00f5\7g\2\2\u00f5\u00f6\7p\2\2\u00f6\u00f7")
        buf.write("\7e\2\2\u00f7\u00f8\7g\2\2\u00f8\66\3\2\2\2\u00f9\u00fa")
        buf.write("\7,\2\2\u00fa8\3\2\2\2\u00fb\u00fc\7-\2\2\u00fc:\3\2\2")
        buf.write("\2\u00fd\u00fe\7/\2\2\u00fe<\3\2\2\2\u00ff\u0100\7\61")
        buf.write("\2\2\u0100>\3\2\2\2\u0101\u0102\7>\2\2\u0102@\3\2\2\2")
        buf.write("\u0103\u0104\7@\2\2\u0104B\3\2\2\2\u0105\u0106\7>\2\2")
        buf.write("\u0106\u0107\7?\2\2\u0107D\3\2\2\2\u0108\u0109\7@\2\2")
        buf.write("\u0109\u010a\7?\2\2\u010aF\3\2\2\2\u010b\u010c\7?\2\2")
        buf.write("\u010c\u010d\7?\2\2\u010dH\3\2\2\2\u010e\u010f\7#\2\2")
        buf.write("\u010f\u0110\7?\2\2\u0110J\3\2\2\2\u0111\u0112\7V\2\2")
        buf.write("\u0112\u0113\7t\2\2\u0113\u0114\7w\2\2\u0114\u011b\7g")
        buf.write("\2\2\u0115\u0116\7H\2\2\u0116\u0117\7c\2\2\u0117\u0118")
        buf.write("\7n\2\2\u0118\u0119\7u\2\2\u0119\u011b\7g\2\2\u011a\u0111")
        buf.write("\3\2\2\2\u011a\u0115\3\2\2\2\u011bL\3\2\2\2\u011c\u011d")
        buf.write("\7f\2\2\u011d\u011e\7g\2\2\u011e\u011f\7h\2\2\u011f\u0120")
        buf.write("\7k\2\2\u0120\u0121\7p\2\2\u0121\u0122\7g\2\2\u0122N\3")
        buf.write("\2\2\2\u0123\u0124\7k\2\2\u0124\u0125\7p\2\2\u0125P\3")
        buf.write("\2\2\2\u0126\u0127\7q\2\2\u0127\u0128\7w\2\2\u0128\u0129")
        buf.write("\7v\2\2\u0129R\3\2\2\2\u012a\u012b\7k\2\2\u012b\u012c")
        buf.write("\7p\2\2\u012c\u012d\7v\2\2\u012dT\3\2\2\2\u012e\u012f")
        buf.write("\7U\2\2\u012f\u0130\7v\2\2\u0130\u0131\7t\2\2\u0131\u0132")
        buf.write("\7k\2\2\u0132\u0133\7p\2\2\u0133\u0134\7i\2\2\u0134V\3")
        buf.write("\2\2\2\u0135\u0136\7d\2\2\u0136\u0137\7q\2\2\u0137\u0138")
        buf.write("\7q\2\2\u0138\u0139\7n\2\2\u0139\u013a\7g\2\2\u013a\u013b")
        buf.write("\7c\2\2\u013b\u013c\7p\2\2\u013cX\3\2\2\2\u013d\u013e")
        buf.write("\7h\2\2\u013e\u013f\7n\2\2\u013f\u0140\7q\2\2\u0140\u0141")
        buf.write("\7c\2\2\u0141\u0142\7v\2\2\u0142Z\3\2\2\2\u0143\u0145")
        buf.write("\t\2\2\2\u0144\u0146\t\3\2\2\u0145\u0144\3\2\2\2\u0146")
        buf.write("\u0147\3\2\2\2\u0147\u0145\3\2\2\2\u0147\u0148\3\2\2\2")
        buf.write("\u0148\u014f\3\2\2\2\u0149\u014b\t\2\2\2\u014a\u0149\3")
        buf.write("\2\2\2\u014b\u014c\3\2\2\2\u014c\u014a\3\2\2\2\u014c\u014d")
        buf.write("\3\2\2\2\u014d\u014f\3\2\2\2\u014e\u0143\3\2\2\2\u014e")
        buf.write("\u014a\3\2\2\2\u014f\\\3\2\2\2\u0150\u0154\7)\2\2\u0151")
        buf.write("\u0153\n\4\2\2\u0152\u0151\3\2\2\2\u0153\u0156\3\2\2\2")
        buf.write("\u0154\u0152\3\2\2\2\u0154\u0155\3\2\2\2\u0155\u0157\3")
        buf.write("\2\2\2\u0156\u0154\3\2\2\2\u0157\u0161\7)\2\2\u0158\u015c")
        buf.write("\7$\2\2\u0159\u015b\n\5\2\2\u015a\u0159\3\2\2\2\u015b")
        buf.write("\u015e\3\2\2\2\u015c\u015a\3\2\2\2\u015c\u015d\3\2\2\2")
        buf.write("\u015d\u015f\3\2\2\2\u015e\u015c\3\2\2\2\u015f\u0161\7")
        buf.write("$\2\2\u0160\u0150\3\2\2\2\u0160\u0158\3\2\2\2\u0161^\3")
        buf.write("\2\2\2\u0162\u0164\t\6\2\2\u0163\u0162\3\2\2\2\u0164\u0165")
        buf.write("\3\2\2\2\u0165\u0163\3\2\2\2\u0165\u0166\3\2\2\2\u0166")
        buf.write("`\3\2\2\2\u0167\u0169\t\7\2\2\u0168\u0167\3\2\2\2\u0169")
        buf.write("\u016a\3\2\2\2\u016a\u0168\3\2\2\2\u016a\u016b\3\2\2\2")
        buf.write("\u016b\u016c\3\2\2\2\u016c\u016d\b\61\2\2\u016db\3\2\2")
        buf.write("\2\u016e\u016f\7<\2\2\u016fd\3\2\2\2\u0170\u0171\7.\2")
        buf.write("\2\u0171f\3\2\2\2\u0172\u0173\7\61\2\2\u0173\u0174\7\61")
        buf.write("\2\2\u0174\u0178\3\2\2\2\u0175\u0177\n\b\2\2\u0176\u0175")
        buf.write("\3\2\2\2\u0177\u017a\3\2\2\2\u0178\u0176\3\2\2\2\u0178")
        buf.write("\u0179\3\2\2\2\u0179\u017c\3\2\2\2\u017a\u0178\3\2\2\2")
        buf.write("\u017b\u017d\7\17\2\2\u017c\u017b\3\2\2\2\u017c\u017d")
        buf.write("\3\2\2\2\u017d\u017e\3\2\2\2\u017e\u018b\7\f\2\2\u017f")
        buf.write("\u0180\7\61\2\2\u0180\u0181\7,\2\2\u0181\u0185\3\2\2\2")
        buf.write("\u0182\u0184\13\2\2\2\u0183\u0182\3\2\2\2\u0184\u0187")
        buf.write("\3\2\2\2\u0185\u0186\3\2\2\2\u0185\u0183\3\2\2\2\u0186")
        buf.write("\u0188\3\2\2\2\u0187\u0185\3\2\2\2\u0188\u0189\7,\2\2")
        buf.write("\u0189\u018b\7\61\2\2\u018a\u0172\3\2\2\2\u018a\u017f")
        buf.write("\3\2\2\2\u018b\u018c\3\2\2\2\u018c\u018d\b\64\2\2\u018d")
        buf.write("h\3\2\2\2\20\2\u011a\u0147\u014c\u014e\u0154\u015c\u0160")
        buf.write("\u0165\u016a\u0178\u017c\u0185\u018a\3\b\2\2")
        return buf.getvalue()


class AGLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    Boolean = 37
    DEFINE = 38
    IN = 39
    OUT = 40
    INT = 41
    STRING = 42
    BOOLEAN = 43
    FLOAT = 44
    ID = 45
    STRING_Note = 46
    NUM = 47
    WS = 48
    COLON = 49
    COMMA = 50
    COMMENT = 51

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'module'", "'{'", "'}'", "'type'", "'Symmetric'", "'symmetric'", 
            "'non-symmetric'", "'Non-Symmetric'", "'['", "']'", "'('", "')'", 
            "'rule'", "'sub'", "'nac'", "'ac'", "'='", "':='", "'binstr2int'", 
            "'.'", "'->'", "';'", "'add'", "'del'", "'rulesequence'", "'subsequence'", 
            "'*'", "'+'", "'-'", "'/'", "'<'", "'>'", "'<='", "'>='", "'=='", 
            "'!='", "'define'", "'in'", "'out'", "'int'", "'String'", "'boolean'", 
            "'float'", "':'", "','" ]

    symbolicNames = [ "<INVALID>",
            "Boolean", "DEFINE", "IN", "OUT", "INT", "STRING", "BOOLEAN", 
            "FLOAT", "ID", "STRING_Note", "NUM", "WS", "COLON", "COMMA", 
            "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "Boolean", "DEFINE", 
                  "IN", "OUT", "INT", "STRING", "BOOLEAN", "FLOAT", "ID", 
                  "STRING_Note", "NUM", "WS", "COLON", "COMMA", "COMMENT" ]

    grammarFileName = "AGL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


